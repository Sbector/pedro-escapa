---
import Layout from "@layouts/Layout.astro";
import { menu } from "@lib/menu";
import { getSubitemData } from "@lib/getSubitemData";
import { getCollection, render } from "astro:content";
import Carousel from "@components/Carousel.jsx";
import Wrapper from "@components/Wrapper.astro";

export async function getStaticPaths() {
  const paths = [];

  for (const item of menu) {
    if (item.visible !== false && item.subitems) {
      for (const sub of item.subitems) {
        if (sub.visible !== false) {
          paths.push({
            params: {
              categoria: item.id,
              slug: sub.slug,
            },
          });
        }
      }
    }
  }

  return paths;
}

const { categoria, slug } = Astro.params;
const subitemData = getSubitemData(menu, categoria, slug);

if (!subitemData) {
  throw new Error(`No se encontró el subitem: ${categoria}/${slug}`);
}

// Construir la ruta actual explícitamente
const currentPath = `/${categoria}/${slug}`;

// Traer la colección de imágenes
const itemCollections = await getCollection("itemCollections");
const collection = itemCollections.find((item) => item.id === slug);

// Traer la colección de descripciones
const descriptions = await getCollection("descriptions");

let DescriptionContent = null;
if (collection?.data?.description) {
  const descriptionRef = collection.data.description;
  console.log("Description ref type:", typeof descriptionRef);
  console.log("Description ref value:", descriptionRef);

  // Buscar la descripción por su id
  // Si es una referencia, usar el id; si es un string, usar directamente
  const refId =
    typeof descriptionRef === "string" ? descriptionRef : descriptionRef.id;
  const descriptionEntry = descriptions.find((desc) => desc.id === refId);

  if (descriptionEntry) {
    const { Content } = await render(descriptionEntry);
    DescriptionContent = Content;
  }
}
---

<Layout
  title={`${collection?.data.title} · Pedro Escapa`}
  currentPath={currentPath}
>
  {
    DescriptionContent && (
      <div class="prose prose-lg max-w-none 
      pt-16 lg:pt-48 
      px-6 lg:px-20">
        <DescriptionContent />
      </div>
    )
  }
  <Wrapper>
    {collection?.data?.images && (
        <Carousel client:load images={collection.data.images} />
      )}
  </Wrapper>
</Layout>
